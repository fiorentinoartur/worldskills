// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.worldskills.Context;

#nullable disable

namespace webapi.worldskills.Migrations
{
    [DbContext(typeof(RankingContext))]
    [Migration("20231219094941_BD_01")]
    partial class BD_01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi.worldskills.Domains.Competidor", b =>
                {
                    b.Property<int>("IdCompetidor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompetidor"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdCompetidor");

                    b.ToTable("Competidor");
                });

            modelBuilder.Entity("webapi.worldskills.Domains.Medalha", b =>
                {
                    b.Property<int>("IdTipoMedalha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoMedalha"));

                    b.Property<string>("TipoMedalha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdTipoMedalha");

                    b.ToTable("Medalha");
                });

            modelBuilder.Entity("webapi.worldskills.Domains.Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPais"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdPais");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("webapi.worldskills.Domains.Ranking", b =>
                {
                    b.Property<int>("IdRanking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRanking"));

                    b.Property<int>("IdCompetidor")
                        .HasColumnType("int");

                    b.Property<int>("IdMedalha")
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<int>("IdSession")
                        .HasColumnType("int");

                    b.Property<int?>("Pontos")
                        .IsRequired()
                        .HasColumnType("INT");

                    b.HasKey("IdRanking");

                    b.HasIndex("IdCompetidor");

                    b.HasIndex("IdMedalha");

                    b.HasIndex("IdPais");

                    b.HasIndex("IdSession");

                    b.ToTable("Ranking");
                });

            modelBuilder.Entity("webapi.worldskills.Domains.Session", b =>
                {
                    b.Property<int>("IdSession")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSession"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdSession");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("webapi.worldskills.Domains.TiposUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdTipoUsuario");

                    b.ToTable("TiposUsuario");
                });

            modelBuilder.Entity("webapi.worldskills.Domains.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuário");
                });

            modelBuilder.Entity("webapi.worldskills.Domains.Ranking", b =>
                {
                    b.HasOne("webapi.worldskills.Domains.Competidor", "Competidor")
                        .WithMany()
                        .HasForeignKey("IdCompetidor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.worldskills.Domains.Medalha", "Medalha")
                        .WithMany()
                        .HasForeignKey("IdMedalha")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.worldskills.Domains.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.worldskills.Domains.Session", "Session")
                        .WithMany()
                        .HasForeignKey("IdSession")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competidor");

                    b.Navigation("Medalha");

                    b.Navigation("Pais");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("webapi.worldskills.Domains.Usuario", b =>
                {
                    b.HasOne("webapi.worldskills.Domains.TiposUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
